<!--
  ~ Copyright 2000-2008 JetBrains s.r.o.
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE idea-plugin PUBLIC "Plugin/DTD" "http://plugins.intellij.net/plugin.dtd">
<idea-plugin>
  <id>org.intellij.scala</id>
  <name>Scala</name>
  <description>Plugin for Scala language support</description>
  <version>VERSION</version>
  <vendor logo="/org/jetbrains/plugins/groovy/images/scala16.png" url="http://www.jetbrains.com">JetBrains Inc.</vendor>
  <idea-version since-build="8582"/>
  <resource-bundle xmlns="">org.jetbrains.plugins.scala.ScalaBundle</resource-bundle>

  <extensions defaultExtensionNs="com.intellij">
    <iconProvider implementation="org.jetbrains.plugins.scala.components.ScalaIconProvider"/>
    <colorSettingsPage implementation="org.jetbrains.plugins.scala.highlighter.ScalaColorsAndFontsPage"/>
    <applicationService serviceInterface="org.jetbrains.plugins.scala.settings.ScalaApplicationSettings"
                        serviceImplementation="org.jetbrains.plugins.scala.settings.ScalaApplicationSettings"/>
    <annotator language="Scala" implementationClass="org.jetbrains.plugins.scala.annotator.ScalaAnnotator"/>
    <errorHandler implementation="org.jetbrains.plugins.scala.error.ErrorReportSubmitter"/>
    <fileTypeFactory implementation="org.jetbrains.plugins.scala.ScalaFileTypeFactory"/>
    <syntaxHighlighter key="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaSyntaxHighlighter"/>
    <treeStructureProvider language="Scala"  implementation="org.jetbrains.plugins.scala.components.ScalaDefsProjectViewProvider"/>
    <lang.braceMatcher language="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaBraceMatcher"/>
    <lang.parserDefinition language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.parser.ScalaParserDefinition"/>
    <lang.commenter language="Scala" implementationClass="org.jetbrains.plugins.scala.highlighter.ScalaCommenter"/>
    <lang.foldingBuilder language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.folding.ScalaFoldingBuilder"/>
    <lang.formatter language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.formatting.ScalaFormattingModelBuilder"/>
    <lang.gotoClassContributor language="Scala" implementationClass="org.jetbrains.plugins.scala.gotoclass.ScalaChooseByNameContributor"/>
    <lang.refactoringSupport language="Scala" implementationClass="org.jetbrains.plugins.scala.refactor.ScalaRefactoringSupportProvider"/>
    <lang.surroundDescriptor language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.surroundWith.descriptors.ScalaExpressionSurroundDescriptor"/>
    <lang.psiStructureViewFactory language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.structureView.ScalaStructureViewFactory"/>
    <frameworkSupport implementation="org.jetbrains.plugins.scala.config.ScalaFacetSupportProvider"/>
    <completion.contributor implementation="org.jetbrains.plugins.scala.lang.completion.ScalaCompletionContributor"/>
    <codeInsight.overrideMethod language="Scala" implementationClass="org.jetbrains.plugins.scala.overrideImplement.ScalaOverrideMethodsHandler"/>
    <codeInsight.implementMethod language="Scala" implementationClass="org.jetbrains.plugins.scala.overrideImplement.ScalaImplementMethodsHandler"/>
    <!--<lang.findUsagesProvider language="Scala" implementationClass="org.jetbrains.plugins.scala.lang.findUsages.ScalaFindUsagesProvider"/>-->
    <!--    <annotator language="Scala" implementationClass=""/>-->
  </extensions>


  <application-components>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.error.ErrorReportConfigurable</implementation-class>
      <interface-class>org.jetbrains.plugins.scala.error.ErrorReportConfigurable</interface-class>
    </component>
    <component>
      <interface-class>org.jetbrains.plugins.scala.util.ScalaToolsFactory</interface-class>
      <implementation-class>org.jetbrains.plugins.scala.util.ScalaToolsFactoryImpl</implementation-class>
    </component>
    <component>                           
      <implementation-class>org.jetbrains.plugins.scala.ScalaLoader</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.components.ScalaFileCreator</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.components.ScalaIconProvider</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.config.ScalaFacetLoader</implementation-class>
      <interface-class>org.jetbrains.plugins.scala.config.ScalaFacetLoader</interface-class>
    </component>
  </application-components>


  <module-components>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.config.ScalaFacetListener</implementation-class>
    </component>
  </module-components>

  <project-components>
    <component>
      <interface-class>com.intellij.ide.projectView.TreeStructureProvider</interface-class>
      <implementation-class>org.jetbrains.plugins.scala.components.ScalaDefsProjectViewProvider</implementation-class>
    </component>
    <component>
      <interface-class>org.jetbrains.plugins.scala.caches.project.ScalaCachesManager</interface-class>
      <implementation-class>org.jetbrains.plugins.scala.caches.project.ScalaCachesManagerImpl</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.finder.ScalaClassFinder</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.lang.psi.impl.toplevel.synthetic.SyntheticClasses</implementation-class>
    </component>
    <component>
      <implementation-class>org.jetbrains.plugins.scala.codeInspection.importInspections.ScalaAddImportPassFactory</implementation-class>
    </component>
  </project-components>
</idea-plugin>