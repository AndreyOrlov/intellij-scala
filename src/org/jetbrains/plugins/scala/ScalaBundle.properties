#
# Copyright 2000-2008 JetBrains s.r.o.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Copyright 2000-2007 JetBrains s.r.o.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Copyright 2000-2006 JetBrains s.r.o.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


########################################################################################################################
# Load SDK
########################################################################################################################
sdk.title=Scala SDK

########################################################################################################################
# Add new Scala file
########################################################################################################################
error.file.already.exists=File with same name already exists

new.scala.template=Scala File
template.file.text= package ${PACKAGE_NAME}\n\
\n\
/** \n\
* Created by IntelliJ IDEA.\n\
* User: ${USER}\n\
* Date: ${DATE}\n\
* Time: ${TIME}\n\
* To change this template use File | Settings | File Templates.\n\
*/

########################################################################################################################
# Parser error messages
########################################################################################################################
package.qualID.expected=Package qualified identifier expected
lbrace.expected='{' expected
rbrace.expected='}' expected
rsqbracket.expected=']' expected
rparenthesis.expected=')' expected
semi.expected=';' or new-line expected
choose.expexted='<-' expected in generator statement
assign.expected='=' expected
case.clauses.expected=Case clauses expected
while.expected=While keyword expected in the 'do' statement
enumerators.expected=Enumerators expected in the 'for' statement
wrong.qual.identifier=Wrong qualified identifier
identifier.expected=Identifier expected
identifier.or.wild.sign.expected=Identifier or '_' expected
dot.expected=Dot expected
out.of.compilation.unit=Out of compilation unit
wrong.var.declaration=Wrong variable declaration
wrong.val.declaration=Wrong value declaration
wrong.type=Wrong type
wrong.parameter=Wrong parameter
wrong.case.modifier=Wrong case modifier. Use it with class or object
wrong.import.statment.end=Wrong import statment tale
wrong.expression=Wrong expression
wrong.postfix.expression=Wrong postfix expression
wrong.existential.declaration=Wrong existential declaration. It must be type or value declaration
import.selector.expected=Import selector expected
simple.type.expected.requires=Simple type expected in requires block
unreachable.error=Unexpected error found
val.var.expected=Val or var keyword expected
def.dcl.expected=Definition or declaration expected
block.expected=Block expected
type.tale.expected=Type keyword expected im simple type tale
existential.block.expected=Existential clause expected
fun.sign.expected='=>' expected
pattern.expected=Pattern expected
condition.expected=Boolean condition expected
implicit.params.excepted=Implicit parameter clause must have at least one parameter
wrong.type.associativity=Wrong associativity. All operators should have the same associativity

########################################################################################################################
# Building caches
########################################################################################################################
title.cache.updating=Updating caches
title.cache.creating=Creating caches
title.cache.files.scanning=Scanning files...
title.cache.files.parsing=Parsing new files...
title.please.wait=Please wait
title.cache.saving=Saving caches
title.cache.datafile.loading=Loading caches
title.cache.files.removing=Removing old caches
title.cache.loading=Loading caches
