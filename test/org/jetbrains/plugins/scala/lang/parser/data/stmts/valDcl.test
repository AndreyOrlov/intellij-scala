case class Some(x: Int){}
object main{
  val x,y,z,t: Int
}
-----
ScalaFile
  ScClass
    AnnotationsList
      <empty list>
    Modifiers
      PsiElement(case)('case')
    PsiWhiteSpace(' ')
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Some')
    PrimaryConstructor
      AnnotationsList
        <empty list>
      Parameters
        ParametersClause
          PsiElement(()('(')
          ClassParameter
            AnnotationsList
              <empty list>
            Modifiers
              <empty list>
            PsiElement(identifier)('x')
            PsiElement(:)(':')
            PsiWhiteSpace(' ')
            ParameterType
              SimpleTypeElement
                CodeReferenceElement
                  PsiElement(identifier)('Int')
          PsiElement())(')')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiElement(})('}')
  PsiElement(newline)('\n')
  ScObject
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(object)('object')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('main')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n  ')
        ScValueDeclaration
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          ListOfIdentifiers
            PsiElement(identifier)('x')
            PsiElement(,)(',')
            PsiElement(identifier)('y')
            PsiElement(,)(',')
            PsiElement(identifier)('z')
            PsiElement(,)(',')
            PsiElement(identifier)('t')
          PsiElement(:)(':')
          PsiWhiteSpace(' ')
          SimpleTypeElement
            CodeReferenceElement
              PsiElement(identifier)('Int')
        PsiWhiteSpace('\n')
        PsiElement(})('}')