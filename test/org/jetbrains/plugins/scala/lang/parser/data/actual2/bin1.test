class Dsl {

  val boo = (ven : Ven) => ven.foo

}
-----
ScalaFil
  ScClass
    AnnotationsList
      <empty list>
    Modifiers
      <empty list>
    PsiElement(class)('class')
    PsiWhiteSpace(' ')
    PsiElement(identifier)('Dsl')
    PsiWhiteSpace(' ')
    ExtendsBlock
      ScTemplateBody
        PsiElement({)('{')
        PsiWhiteSpace('\n\n  ')
        ScPatternDefinition
          AnnotationsList
            <empty list>
          Modifiers
            <empty list>
          PsiElement(val)('val')
          PsiWhiteSpace(' ')
          InfixPattern
            ReferenceIdentifierPattern
              StableIdentifier
                PsiElement(identifier)('boo')
          PsiWhiteSpace(' ')
          PsiElement(=)('=')
          PsiWhiteSpace(' ')
          CommonExpression
            BindingsList
              PsiElement(()('(')
              Binding
                PsiElement(identifier)('ven')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                FunctionalType
                  InfixType
                    CompoundType
                      TypeWithAnnotation
                        AnnotationsList
                          <empty list>
                        SimpleType
                          StableIdentifier
                            PsiElement(identifier)('Ven')
              PsiElement())(')')
            PsiWhiteSpace(' ')
            PsiElement(=>)('=>')
            PsiWhiteSpace(' ')
            PostfixExpression
              InfixExpression
                PrefixExpression
                  SimpleExpression
                    Path
                      StableIdentifier
                        Path
                          StableIdentifier
                            PsiElement(identifier)('ven')
                        PsiElement(.)('.')
                        PsiElement(identifier)('foo')
        PsiWhiteSpace('\n\n')
        PsiElement(})('}')
