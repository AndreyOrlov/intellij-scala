object InfixExpr {
  def parse(builder: PsiBuilder): Boolean = {
    builder error ScalaBundle.message("fun.sign.expected", new Array[Object](0))
    caseClauseMarker.done(ScalaElementTypes.CASE_CLAUSE)
    return true
  }
}
-----
object {object}
white space in line { }
identifier {InfixExpr}
white space in line { }
{ {{}
white space in line {
  }
def {def}
white space in line { }
identifier {parse}
( {(}
identifier {builder}
: {:}
white space in line { }
identifier {PsiBuilder}
) {)}
: {:}
white space in line { }
identifier {Boolean}
white space in line { }
= {=}
white space in line { }
{ {{}
white space in line {
    }
identifier {builder}
white space in line { }
identifier {error}
white space in line { }
identifier {ScalaBundle}
. {.}
identifier {message}
( {(}
string content {"fun.sign.expected"}
, {,}
white space in line { }
new {new}
white space in line { }
identifier {Array}
[ {[}
identifier {Object}
] {]}
( {(}
integer {0}
) {)}
) {)}
newline {
    }
identifier {caseClauseMarker}
. {.}
identifier {done}
( {(}
identifier {ScalaElementTypes}
. {.}
identifier {CASE_CLAUSE}
) {)}
newline {
    }
return {return}
white space in line { }
true {true}
white space in line {
  }
} {}}
white space in line {
}
} {}}